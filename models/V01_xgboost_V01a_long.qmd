---
title: "Modeling Long 31 days"
format: 
  html: 
    toc: true
    toc-depth: 2
    toc-location: left
    theme: darkly
    fontsize: 1.1em
    grid: 
      sidebar-width: 0px
      body-width: 2000px
      margin-width: 0px
---

# Intro 

* This is a classification model.  Forward returns have been ordered in quintile and we put this quintile back into thirdile in the following way: bottom 1 and 2 back to #1, middle 3 to #2, top 4 and 5 quintile to #3 thirdile.  Bascially bottom 40% of returns are thirdile 1, middle 20% (the ones that are around 0%) in thirdile 2 and top 40% of returns are in thirdile 3. 
* The model engine is Xgboost  
* To predict: Forward return at 41 days and 61 days.  

Other idiosyncrasies of this model: 

* all returns are log returns

# Pre-processing 

## Setting up 

```{r}
#| label: setup
#| message: false
#| warning: false
#| eval: true

library(dplyr)
library(purrr)
library(readr)
library(lubridate)
library(tidyr)
library(glue)

the_path <- here::here()

### Function to harmonize the data. 
### ### This is copied from summary_report_v3
conform_data <- function(ticker){
    df <- read_csv(paste0(the_path, "/data_stock_fmpr/", ticker, ".csv"), 
                   show_col_types = FALSE) |>  
      select(date, open, high, low, close, adjusted=adjClose, volume) |>  
      arrange(date) |> 
      filter(date < today() - 252)
    return(df)
}

ticker <- 'YUM'
```

## Buidling df 

```{r}
library(timetk)

mean_roll_3M <- slidify(.f = mean, .align = 'right', .period = 61)
sd_roll_3M <- slidify(.f = sd, .align = 'right', .period = 61)
mean_roll_7M <- slidify(.f = mean, .align = 'right', .period = 147)
sd_roll_7M <- slidify(.f = sd, .align = 'right', .period = 147)
mean_roll_1Y <- slidify(.f = mean, .align = 'right', .period = 251)
sd_roll_1Y <- slidify(.f = sd, .align = 'right', .period = 251)

df <- read_csv(glue(the_path, '/data_stock_fmpr/', ticker, '.csv')) |> 
  arrange(date) |> 
  select(date, open, high, low, close, volume) |>
  mutate(ret_1d = log(close / lag(close, n = 1)), 
         ret_5d = log(close / lag(close, n = 5)), 
         ret_21d = log(close / lag(close, 21)), 
         
         roll_mean_ret1d_3M = mean_roll_3M(ret_1d), 
         roll_sd_ret1d_3M = sd_roll_3M(ret_1d), 
         above_sd_ret1d_3M = (ret_1d - roll_mean_ret1d_3M) / roll_sd_ret1d_3M, 
         roll_mean_ret5d_3M = mean_roll_3M(ret_5d), 
         roll_sd_ret5d_3M = mean_roll_3M(ret_5d), 
         above_sd_ret5d_3M = (ret_5d - roll_mean_ret5d_3M) / roll_sd_ret5d_3M, 
         roll_mean_ret5d_7M = mean_roll_7M(ret_5d), 
         roll_sd_ret5d_7M = sd_roll_7M(ret_5d), 
         above_sd_ret5d_7M = (ret_5d - roll_mean_ret5d_7M) / roll_sd_ret5d_7M, 
         roll_mean_ret21d_1Y = mean_roll_1Y(ret_21d), 
         roll_sd_ret21d_1Y = sd_roll_1Y(ret_21d),          
         above_sd_ret21d_1Y = (ret_21d - roll_mean_ret21d_1Y) / roll_sd_ret21d_1Y,
         
         intra_day = (high - low) / open, 
         roll_mean_intra_day_1Y = roll_mean(intra_day,  251), 
         roll_sd_intra_day_1Y = roll_sd(intra_day,  251), 
         roll_sd_intra_day_3M = roll_sd(intra_day,  61), 
         above_sd_intraday_1Y = (intra_day - roll_mean_intra_day_1Y) / roll_sd_intra_day_1Y, 
         
         ## old parameters
         ema20 = TTR::EMA(close, 20), 
         sma50 = TTR::SMA(close, 50), 
         sma100 = TTR::SMA(close, 100), 
         sma200 = TTR::SMA(close, 200),
         volum_sma200 = TTR::SMA(volume,  n = 200), 
         volum200_perc = log(volume / volum_sma200), 
         
         ma_cross_l = sma50 / sma100, 
         corr_ema20_sma50_1Y = roll_cor(ema20, sma50, width = 251), 
         corr_sma50_sma200_199d = roll_cor(sma50, sma200, 199), 
         volat_ret1d_63days = roll_sd(ret_1d, 63), 
         volat_volu200_31days = roll_sd(volum200_perc, width = 31), 
         volat_volu200_251days = roll_sd(volum200_perc, width = 251), 
         forw_ret = log(lead(close, n = num_days) / close), 
         ord_class = ntile(forw_ret, 5), 
         ord_class2 = case_when(ord_class == 1 ~ 1, 
                                ord_class == 2 ~ 1, 
                                ord_class == 3 ~ 2, 
                                ord_class == 4 ~ 3, 
                                ord_class == 5 ~ 3), 
         ord_class2 = as.factor(ord_class2))

df2 <- df |> 
  select(date, 
         above_sd_ret1d_3M, above_sd_ret5d_3M, above_sd_ret5d_7M, above_sd_ret21d_1Y,
         roll_sd_ret21d_1Y, above_sd_intraday_1Y, roll_sd_intra_day_3M, 
         volat_volu200_31days, volat_volu200_251days, 
         ma_cross_l, corr_ema20_sma50_1Y, corr_sma50_sma200_199d, volat_ret1d_63days, 
         ord_class2) |> 
  drop_na()
```

## Resampling and Recipes 

```{r}

```


# Modeling 

# Variables importance & Metrics 