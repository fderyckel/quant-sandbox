---
title: "Summary Reports V3"
author: "FdR"
date: "3-12-2023"
output: html
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(knitr)

knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
the_path <- here::here()

source('../functions/summary_reports_v3.R')
source('../functions/chart_plotting_v1.R')
source('../functions/fmpr_functions.R')
```

# How did the market perform ? 

Return of main indices and sectors over the week / month / year
```{r}
tickers <- c('SPY', 'DIA', 'QQQ')
sectors <- c('XLC', 'XLY', 'XLP', 'XLE', 'XLF', 'XLV', 'XLI', 'XLB', 'XLRE', 'XLK', 'XLU')

# now we make 2 tables one for overall market and one for sectors
# rows are markets, columns are daily, weekly, monthly, yearly. 

get_returns <- function(ticker) { 
  df <- read_csv(paste0(the_path, '/data_stock_fmpr/', ticker, '.csv')) |> 
    select(date, adjusted = adjClose) |> 
    arrange(date) |> 
    mutate(ret_1d = log(adjusted / lag(adjusted, n = 1)), 
           ret_1W = log(adjusted / lag(adjusted, n = 5)), 
           ret_1M = log(adjusted / lag(adjusted, n = 21)), 
           ret_5M = log(adjusted / lag(adjusted, n = 105)), 
           ret_1Y = log(adjusted / lag(adjusted, n = 252))) |> 
    slice_tail(n = 1)
  return(df)
  
}


```


```{r}
#| message: false
#| warning: false

df <- tibble(ticker = tickers) |> 
  mutate(returns = map(tickers, get_returns))
```


# Portfolio Assets 

```{r}
#| label: xlv

# these 6 stocks make up for more than 40% of the XLV index. 
tickers = c('EWH', 'GDX', 'CGC', 'EEM') 
etf1 =    c('EEM', 'UUD', 'SPY', 'UUD')

stock_tickers <- c(tickers, 'SPY', 'XLV')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

df <- tibble(ticker = tickers, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_portfolio.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = tickers[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()

```

# Momentum


# volatility 

