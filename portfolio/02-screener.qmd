---
title: "02-screeners"
format: html
editor: visual
---

# Setting up

Initial library and stock universe

```{r}
#| label: setup
#| message: false
#| warning: false

library(readr)
library(dplyr)
library(lubridate)
library(purrr)
library(ggplot2)
library(timetk)
library(tidyr)

the_path <- here::here()

xle = c('XOM', 'CVX', 'EOG', 'COP', 'MPC', 'PSX', 'PXD', 'SLB', 'VLO', 'WMB', 'OKE', 
        'OXY', 'HES', 'KMI', 'BKR', 'HAL', 'DVN', 'FANG', 'TRGP', 'AMR', 'MRO', 
        'EQT', 'OVV') 
xlf = c('BRK.B', 'JPM', 'V', 'MA', 'BAC', 'WFC', 'SPGI', 'GS', 'MS', 'BLK', 'AXP', 'SCHW', 
        'C', 'MMC', 'BX', 'PGR', 'CB', 'USB', 'PYPL', 'MCO', 'PNC', 'AON', 
        'CBOE', 'CME', 'ICE') 
xlp = c('PG', 'UL',  'WMT', 'PEP', 'PM', 'MDLZ', 'ADM', 'KMB', 'MO', 'CL', 'TGT', 'STZ', 
        'DEO', 'GIS', 'SYY', 'KDP', 'EL', 'KR', 'KHC', 'DG', 'HSY', 'MKC', 'DLTR', 
        'HRL', 'CHD', 'CLX', 'COTY', 'ELF', 'SJM', 'K', 'CAG') 
xlu = c('NEE', 'SO', 'DUK', 'SRE', 'AEP', 'D', 'PCG', 'CEG', 'EXC', 'XEL', 'ED', 
        'PEG', 'EIX', 'WEC', 'AWK', 'DTE', 'ES', 'ETR', 'PPL', 'AEE', 'FE') 
xlv = c('UNH', 'LLY', 'JNJ', 'MRK', 'ABBV', 'PFE', 'RVTY', 'TMO', 'AMGN', 'DHR', 
        'ISRG', 'ELV', 'MDT', 'VRTX', 'BMY', 'CVS', 'SYK', 'GILD', 'REGN', 'ZTS', 
        'CI', 'BSX', 'BDX', 'MCK', 'HUM', 'COR') 
xly = c('AMZN', 'TSLA', 'MCD', 'NKE', 'HD', 'LOW', 'BKNG', 'PAG', 'SBUX', 'TJX', 'CMG', 
        'ABNB', 'LULU', 'ORLY', 'MAR', 'GM', 'F', 'HLT', 'AZO', 'ROST', 'DHI', 'YUM', 
        'RCL', 'TSCO', 'PHM', 'EXPE', 'DRI', 'GRMN') 
xme = c('AA', 'X', 'MP', 'CLF', 'ATI', 'AMR', 'FCX', 'NUE', 'CRS', 'NEM', 'RS', 
        'STLD', 'BTU', 'HL', 'RGLD', 'GOLD', 'NEM', 'AEM', 'UEC', 'ALB', 'PAAS', 
        'FMC', 'MOS', 'SQM', 'PBR', 'RIO', 'VALE', 'TECK', 'SCCO', 'BHP') 

```

# Volatility

Identify top 13 stocks with highest historical volatility

```{r}
#| label: volatility-top10

conform_data <- function(ticker){
    df <- read_csv(paste0(the_path, "/data_stock_fmpr/", ticker, ".csv"), 
                   show_col_types = FALSE) |>  
      select(date, adjusted=adjClose) |>  
      arrange(date)
    return(df)
}

sd_roll_21d = slidify(.f = sd, .period = 21, .align = 'right')
sd_roll_211d = slidify(.f = sd, .period = 211, .align = 'right')

calc_vol <- function(ticker) {
  df <- conform_data(ticker) |> 
    select(date, adjusted) |> 
    mutate(ret_1d = log(adjusted / lag(adjusted, n = 1)), 
           ret_1M = log(adjusted / lag(adjusted, n = 21)), 
           ret_2M = log(adjusted / lag(adjusted, n = 42)), 
           ret_3M = log(adjusted / lag(adjusted, n = 63)), 
           ret_5M = log(adjusted / lag(adjusted, n = 107)), 
           ret_7M = log(adjusted / lag(adjusted, n = 149)), 
           ret_1Y = log(adjusted / lag(adjusted, n = 251)),
           roll21d_sd_ret1d = sd_roll_21d(ret_1d), 
           roll211d_sd_ret1d = sd_roll_211d(ret_1d),
           weekly_vol_change = log(roll21d_sd_ret1d / lag(roll21d_sd_ret1d, n = 5))) |> 
    slice_tail(n = 1)
}

df_vol <- tibble(ticker = c(xlc, xle, xlf, xlp, xlu, xlv, xly, xme)) |> 
  unique() |> 
  mutate(vol = map(ticker, calc_vol)) |> 
  unnest(cols = c(vol)) 
yo1 <- df_vol |> arrange(desc(roll211d_sd_ret1d)) |> slice_head(n = 19)
yo2 <- df_vol |> arrange(desc(roll21d_sd_ret1d)) |> slice_head(n = 19)
yo <- union(yo1, yo2)
```

Let's make a plot

```{r}
source('../functions/summary_reports_v3.R')
source('../functions/chart_plotting_v1.R')
source('../functions/fmpr_functions.R')

#for (i in 1:length(yo)) { 
#  tryCatch({ 
#    get_fmpr_prices(yo$ticker[i])
#    print(glue("just downloaded data for ", yo$ticker[i], " and saved it."))
#    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
#}

df <- tibble(ticker = c(xlc, xle, xlf, xlp, xlu, xlv, xly, xme), 
              etf1 = rep('SPY', length(ticker)), 
              etf2 = c(rep('XLC', length(xlc)), rep('XLE', length(xle)), 
                       rep('XLF', length(xlf)), rep('XLP', length(xlp)), 
                       rep('XLU', length(xlu)), rep('XLV', length(xlv)), 
                       rep('XLY', length(xly)), rep('XME', length(xme)))) 
df <- yo |> select(ticker) |> left_join(df, by = join_by('ticker')) |> 
  arrange(etf2)


```

```{r}
pdf(paste0(the_path, "/charts/charts_highVol.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = df$ticker[i], etf1 = df$etf1[i], etf2 = df$etf2[i]) |> 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 400, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 400, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 400, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()
```
