---
title: "Summary Reports V3"
author: "FdR"
date: "3-12-2023"
output: html
---

There has been a error / misunderstanding in there.  I thought I was putting my color dots (long/neutral/short) with a recency bias... but actually it was using all the available data points.  I'm not sure what is best to be honest.  Using all data points to make my 3 buckets of returns or to just stick to, let's say,  the last 3 years. ??? 

```{r}
#| label: setup
#| warning: false
#| message: false
#| echo: false

library(knitr)

knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
the_path <- here::here()

source('../functions/chart_plotting_v1.R')
```

# Download data and charts - US sectors 

## XLC - Communication Services Select Sector SPDR Fund 

```{r}
#| label: xlc

# these 6 stocks make up for more than 40% of the XLV index. 
xlc = c('META', 'GOOG', 'T', 'VZ', 'DIS', 'CHTR', 'NFLX', 'CMCSA', 'EA', 'WBD', 
        'DASH', 'Z', 'PINS', 'TTD', 'TTWO', 'OMC',  'LYV', 'IPG', 'MTCH', 'FOXA', 'PARA')
etf1 =    rep('SPY', length(xlc))
etf2 =    rep('XLC', length(xlc))

stock_tickers <- c(xlc, 'XLC')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

df <- tibble(ticker = xlc, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_stocks_XLC.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = xlc[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()

```


## XLE - Energy Select Sector SPDR Fund

```{r}
#| label: xle

# not working because too new:  
# these 6 stocks make up for more than 40% of the XLV index. 
xle = c('XOM', 'CVX', 'EOG', 'COP', 'MPC', 'PSX', 'PXD', 'SLB', 'VLO', 'WMB', 'OKE', 
        'OXY', 'HES', 'KMI', 'BKR', 'HAL', 'DVN', 'FANG', 'TRGP', 'AMR', 'MRO', 
        'EQT', 'OVV', 'FCG') 
etf1 =    c(rep('SPY', length(xle)))
etf2 =    c(rep('XLE', length(xle)))

stock_tickers <- c(xle, 'XLE')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}


df <- tibble(ticker = xle, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_stocks_XLE.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = xle[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()

```

## XLF - Financial Select Sector SPDR Fund

```{r}
#| label: xle

# not working because too new:  
# these 6 stocks make up for more than 40% of the XLV index. 
xlf = c('BRK.B', 'JPM', 'V', 'MA', 'BAC', 'WFC', 'SPGI', 'GS', 'MS', 'BLK', 'AXP', 'SCHW', 
        'C', 'MMC', 'BX', 'PGR', 'CB', 'USB', 'PYPL', 'MCO', 'PNC', 'AON', 'TRV', 
        'CBOE', 'CME', 'ICE', 'KRE') 
etf1 =    c(rep('SPY', length(xlf)))
etf2 =    c(rep('XLF', length(xlf)))

stock_tickers <- c(xlf, 'XLF')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}


df <- tibble(ticker = xlf, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_stocks_XLF.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = xlf[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()

```

 
## XLK 

```{r}
xlk = c('ABNB', 'GOOG', 'META', 'AAPL', 'NFLX', 'SQ', 'PYPL', 'TSLA', 'TWLO', 'AMZN', 
        'BABA', 'AVGO', 'ADBE', 'CRM', 'AMD', 'ACN', 'CSCO', 'INTC', 'TSM', 'MSFT', 'TER',  
        'ORCL', 'INTU', 'QCOM', 'IBM', 'NOW', 'TXN', 'AMAT', 'NVDA', 'PANW', 'PLTR') 
etf1 =    rep('QQQ', length(xlk))
etf2 =    rep('XLK', length(xlk))

stock_tickers <- c(xlk, 'XLK')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

df <- tibble(ticker = xlk, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_stocks_XLK.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = xlk[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()
```

## XLP - Consumer Staples Select Sector SPDR Fund

```{r}
#| label: xlp

# not working because too new: KVUE, 
xlp = c('PG', 'UL',  'WMT', 'PEP', 'PM', 'MDLZ', 'ADM', 'KMB', 'MO', 'CL', 'TGT', 'STZ', 
        'DEO', 'GIS', 'SYY', 'KDP', 'EL', 'KR', 'KHC', 'DG', 'HSY', 'MKC', 'DLTR', 
        'HRL', 'CHD', 'CLX', 'COTY', 'ELF', 'SJM', 'K', 'CAG') 
etf1 =    c(rep('SPY', length(xlp)))
etf2 =    c(rep('XLP', length(xlp)))

stock_tickers <- c(xlp, 'XLP')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

df <- tibble(ticker = xlp, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_stocks_XLP.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = xlp[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()

```


## XLU 

```{r}
#| label: xlu

# these 6 stocks make up for more than 40% of the XLV index. 
xlu = c('NEE', 'SO', 'DUK', 'SRE', 'AEP', 'D', 'PCG', 'CEG', 'EXC', 'XEL', 'ED', 
        'PEG', 'EIX', 'WEC', 'AWK', 'DTE', 'ES', 'ETR', 'PPL', 'AEE', 'FE') 
etf1 =    rep('SPY', length(xlu))
etf2 =    rep('XLU', length(xlu))

stock_tickers <- c(xlu, 'XLU')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

df <- tibble(ticker = xlu, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_stocks_XLU.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = xlu[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()
```


## XLV 

```{r}
#| label: xlv

xlv = c('UNH', 'LLY', 'JNJ', 'MRK', 'ABBV', 'ABT', 'PFE', 'RVTY', 'TMO', 'DHR', 
        'ISRG', 'ELV', 'MDT', 'BMY', 'CVS', 'SYK', 'ZTS', 
        'CI', 'BSX', 'BDX', 'MCK', 'HUM', 'COR', 
        'VRTX', 'REGN', 'AMGN', 'GILD', 'IQV', 'BIIB', 'MRNA', 'MTD', 'ILMN', 'ALNY') 
etf1 =    rep('SPY', length(xlv))
etf2 =    rep('XLV', length(xlv))

stock_tickers <- c(xlv, 'XLV')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

df <- tibble(ticker = xlv, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_stocks_XLV.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = xlv[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()

```

## XLY - Consumer Discretionary Select Sector SPDR Fund 

```{r}
# these 6 stocks make up for more than 40% of the XLV index. 
xly = c('AMZN', 'TSLA', 'MCD', 'NKE', 'HD', 'LOW', 'BKNG', 'PAG', 'SBUX', 'TJX', 'CMG', 
        'ABNB', 'LULU', 'ORLY', 'MAR', 'GM', 'F', 'HLT', 'AZO', 'ROST', 'DHI', 'YUM', 
        'RCL', 'TSCO', 'PHM', 'EXPE', 'DRI', 'GRMN') 
etf1 =    rep('SPY', length(xly))
etf2 =    rep('XLY', length(xly))

stock_tickers <- c(xly, 'XLY')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

df <- tibble(ticker = xly, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_stocks_XLY.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = xly[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()
```


## XME 

```{r}
# XME
xme = c('AA', 'X', 'MP', 'CLF', 'ATI', 'AMR', 'FCX', 'NUE', 'CRS', 'NEM', 'RS', 
        'STLD', 'BTU', 'HL', 'RGLD', 'GOLD', 'AEM', 'UEC', 'ALB', 'PAAS', 
        'FMC', 'MOS', 'SQM', 'PBR', 'RIO', 'VALE', 'TECK', 'SCCO', 'BHP') 
etf1 =    rep('SPY', length(xme))
etf2 =    rep('XME', length(xme))

stock_tickers <- c(xme, 'XME')

for (i in 1:length(stock_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(stock_tickers[i])
    print(glue("just downloaded data for ", stock_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

df <- tibble(ticker = xme, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path, "/charts/charts_stocks_XME.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = xme[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()
```


# Download data and charts - International Indices

```{r}
#downloading foreign markets
st <- c('EWQ', 'EWP', 'EWG', 'EWU', 'EWI', 'EWL', 'EPOL', 'EWD', 'EWN', 
        'EEM', 'EWZ', 'EWW', 'EWJ', 'EWY', 'EWS', 'EWM', 'FXI', 'KWEB', 
        'EWH', 'EWT', 'THD', 'EIDO', 'EPHE', 'EWA', 'EZA', 'EWC')
for (i in 1:length(st)) { 
  tryCatch({ 
    get_fmpr_prices(st[i])
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
df <- tibble(ticker = st) 
pdf(paste0(the_path,"/charts/charts_foreign.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = df$ticker[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, start_date = today()-350, end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], yo$ticker, start_date = today()-350, end_date = today())
  Sys.sleep(2)
  }
dev.off()
```


# Download data and charts - US Sectors & indices

```{r}
#| label: indicses

etf_tickers <- c("XLF", "XLI", "XLY", "XLV", "XME", "XLB", "XBI", "IYT", "HACK", 
                 "VOX", "ITB", "FXG",  'VCR', 'XLC', 'IYW', 'VGT', 
                 "SMH", "IPAY", "SPY", "RSP", "QQQ", "XLE", "VDE", "XOP", 'GLD', 
                 'GDX', "GDXJ", "VAW", 'PBW', "EEM", 'DIA', 
                 "KWEB", "HYG", "TLT", "DBB", "DBA", "IWD", "IWF")

for (i in 1:length(etf_tickers)) { 
  tryCatch({ 
    get_fmpr_prices(etf_tickers[i])
    print(glue("just downloaded data for ", etf_tickers[i], " and saved it."))
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

etf1 =    rep('SPY', length(etf_tickers))
etf2 =    rep('QQQ', length(etf_tickers))

df <- tibble(ticker = etf_tickers, etf1 = etf1, etf2 = etf2) 
pdf(paste0(the_path,"/charts/charts_index.pdf"), width=13, height=8, onefile = TRUE)
for (i in 1:nrow(df)){ 
  print(df$ticker[i])
  yo <- tibble(ticker = etf_tickers[i], etf1 = etf1[i], etf2 = etf2[i]) %>% 
    mutate(raw_df = map(ticker, function(.x) conform_data(.x, "Daily", "fmpr")), 
           ext_df = map(raw_df, create_plot_fin_df))
  create_candlestick_chart(yo$ext_df[[1]], yo$ticker, 
                           start_date = today() - 365, 
                           end_date = today())
  create_vol_candlestick_chart(yo$ext_df[[1]], 
                               yo$ticker, 
                               start_date = today() - 365, 
                               end_date = today())
  create_rel_candlestick_chart(df$ticker[i], 
                               df$etf1[i], 
                               df$etf2[i], 
                               df$ticker[i], 
                               start_date = today() - 365, 
                               end_date = today())  
  Sys.sleep(2)
  }
dev.off()
```


# stocks with changed of volatility 
 
Check for higher monthly volatility and change in higher monthly volatility (from this week to last).  make list of top 20 volatility. 

```{r}
#| label: market_vol
#| message: false
#| warning: false

library(readr)
library(dplyr)
library(lubridate)
library(purrr)
library(ggplot2)
library(timetk)
library(tidyr)

the_path <- here::here()

xlc = c('META', 'GOOG', 'T', 'VZ', 'DIS', 'CHTR', 'NFLX', 'CMCSA', 'EA', 'WBD', 
        'DASH', 'Z', 'PINS', 'TTD', 'TTWO', 'OMC',  'LYV', 'IPG', 'MTCH', 'FOXA', 'PARA')
xle = c('XOM', 'CVX', 'EOG', 'COP', 'MPC', 'PSX', 'PXD', 'SLB', 'VLO', 'WMB', 'OKE', 
        'OXY', 'HES', 'KMI', 'BKR', 'HAL', 'DVN', 'FANG', 'TRGP', 'AMR', 'MRO', 
        'EQT', 'OVV') 
xlf = c('BRK.B', 'JPM', 'V', 'MA', 'BAC', 'WFC', 'SPGI', 'GS', 'MS', 'BLK', 'AXP', 'SCHW', 
        'C', 'MMC', 'BX', 'PGR', 'CB', 'USB', 'PYPL', 'MCO', 'PNC', 'AON', 'TRV', 
        'CBOE', 'CME', 'ICE', 'KRE') 
xlk = c('ABNB', 'GOOG', 'META', 'AAPL', 'NFLX', 'SQ', 'PYPL', 'TSLA', 'TWLO', 'AMZN', 
        'BABA', 'AVGO', 'ADBE', 'CRM', 'AMD', 'ACN', 'CSCO', 'INTC', 'TSM', 'MSFT', 'TER',  
        'ORCL', 'INTU', 'QCOM', 'IBM', 'NOW', 'TXN', 'AMAT', 'NVDA', 'PANW', 'PLTR') 
xlp = c('PG', 'UL',  'WMT', 'PEP', 'PM', 'MDLZ', 'ADM', 'KMB', 'MO', 'CL', 'TGT', 'STZ', 
        'DEO', 'GIS', 'SYY', 'KDP', 'EL', 'KR', 'KHC', 'DG', 'HSY', 'MKC', 'DLTR', 
        'HRL', 'CHD', 'CLX', 'COTY', 'ELF', 'SJM', 'K', 'CAG') 
xlu = c('NEE', 'SO', 'DUK', 'SRE', 'AEP', 'D', 'PCG', 'CEG', 'EXC', 'XEL', 'ED', 
        'PEG', 'EIX', 'WEC', 'AWK', 'DTE', 'ES', 'ETR', 'PPL', 'AEE', 'FE') 
xlv = c('UNH', 'LLY', 'JNJ', 'MRK', 'ABBV', 'ABT', 'PFE', 'RVTY', 'TMO', 'DHR', 
        'ISRG', 'ELV', 'MDT', 'BMY', 'CVS', 'SYK', 'ZTS', 
        'CI', 'BSX', 'BDX', 'MCK', 'HUM', 'COR', 
        'VRTX', 'REGN', 'AMGN', 'GILD', 'IQV', 'BIIB', 'MRNA', 'MTD', 'ILMN', 'ALNY')  
xly = c('AMZN', 'TSLA', 'MCD', 'NKE', 'HD', 'LOW', 'BKNG', 'PAG', 'SBUX', 'TJX', 'CMG', 
        'ABNB', 'LULU', 'ORLY', 'MAR', 'GM', 'F', 'HLT', 'AZO', 'ROST', 'DHI', 'YUM', 
        'RCL', 'TSCO', 'PHM', 'EXPE', 'DRI', 'GRMN') 
xme = c('AA', 'X', 'MP', 'CLF', 'ATI', 'AMR', 'FCX', 'NUE', 'CRS', 'NEM', 'RS', 
        'STLD', 'BTU', 'HL', 'RGLD', 'GOLD', 'NEM', 'AEM', 'UEC', 'ALB', 'PAAS', 
        'FMC', 'MOS', 'SQM', 'PBR', 'RIO', 'VALE', 'TECK', 'SCCO', 'BHP') 

conform_data <- function(ticker){
    df <- read_csv(paste0(the_path, "/data_stock_fmpr/", ticker, ".csv"), 
                   show_col_types = FALSE) |>  
      select(date, adjusted=adjClose) |>  
      arrange(date)
    return(df)
} 

sd_roll_21d = slidify(.f = sd, .period = 21, .align = 'right')
sd_roll_211d = slidify(.f = sd, .period = 211, .align = 'right')

calc_vol <- function(ticker) {
  df <- conform_data(ticker) |> 
    select(date, adjusted) |> 
    mutate(ret_1d = log(adjusted / lag(adjusted, n = 1)), 
           ret_1M = round(log(adjusted / lag(adjusted, n = 21)), 3), 
           #ret_2M = log(adjusted / lag(adjusted, n = 42)), 
           ret_3M = round(log(adjusted / lag(adjusted, n = 63)), 3), 
           ret_5M = round(log(adjusted / lag(adjusted, n = 107)), 3), 
           ret_7M = round(log(adjusted / lag(adjusted, n = 149)), 3), 
           ret_1Y = round(log(adjusted / lag(adjusted, n = 251)), 3),
           roll21d_sd_ret1d = round(sd_roll_21d(ret_1d), 3), 
           roll211d_sd_ret1d = round(sd_roll_211d(ret_1d), 3),
           weekly_vol_change = round(log(roll21d_sd_ret1d / lag(roll21d_sd_ret1d, n = 5)), 3)) |> 
    slice_tail(n = 1) |> 
    select(-ret_1d)
}

df_vol <- tibble(ticker = c(xlc, xle, xlf, xlp, xlu, xlv, xly, xme)) |> 
  mutate(vol = map(ticker, calc_vol)) |> 
  unnest(cols = c(vol)) |> 
  arrange(desc(roll211d_sd_ret1d))
```
 
# Breadth of markets 

```{r}
#| label: market_breadth
#| message: false
#| warning: false

library(readr)
library(dplyr)
library(lubridate)
library(purrr)
library(ggplot2)
library(timetk)
library(scales)

the_path <- here::here()

conform_data <- function(ticker){
    df <- read_csv(paste0(the_path, "/data_stock_fmpr/", ticker, ".csv"), 
                   show_col_types = FALSE) |>  
      select(date, open, high, low, close, adjusted=adjClose, volume) |>  
      arrange(date)
    return(df)
}

mean_roll_50 <- slidify(.f = mean, .align = 'right', .period = 50)
mean_roll_100 <- slidify(.f = mean, .align = 'right', .period = 100)
mean_roll_200 <- slidify(.f = mean, .align = 'right', .period = 200)

create_averages <- function(ticker) {
  df <- conform_data(ticker) |> 
    mutate(ema20 = TTR::EMA(adjusted, 20), 
           above_ema20 = if_else(adjusted > ema20, 1, 0), 
           sma50 = mean_roll_50(adjusted), 
           above_sma50 = if_else(adjusted > sma50, 1, 0), 
           sma100 = mean_roll_100(adjusted), 
           above_sma100 = if_else(adjusted > sma100, 1, 0), 
           sma200 = mean_roll_200(adjusted), 
           above_sma200 = if_else(adjusted > sma200, 1, 0)) |> 
    select(date, above_sma50, above_sma100, above_sma200) |> 
    na.omit()
    
}

df <- tibble(ticker = c(xlc, xle, xlf, xlp, xlv, xly, xme)) |> 
  mutate(breadth = map(ticker, create_averages)) |> 
  unnest(cols = c(breadth)) |> 
  group_by(date) |> 
  summarize(num_stocks = n(), 
            avg_abov50 = mean(above_sma50), 
            avg_abov100 = mean(above_sma100), 
            avg_abov200 = mean(above_sma200)) 

ggplot(df |> filter(date > today() - 750), aes(x = date)) + 
  geom_line(aes(y = avg_abov50), color = 'blue') + 
  geom_line(aes(y = avg_abov200), color = 'purple') + 
  geom_hline(aes(yintercept = 0.9), color = 'red', linetype = 'dashed') + 
  geom_hline(aes(yintercept = 0.1), color = 'red', linetype = 'dashed') + 
  scale_x_date(breaks = breaks_width("2 months"),labels = label_date("%b %y")) + 
  #title(main = 'XLE') + 
  #annotate("text", x = 1, y = 1, label = 'XLE', color = "white") + 
  theme(legend.position = "none", 
        axis.title.x = element_blank(),
        axis.text.y = element_text(angle = 90), 
        axis.text.x = element_text(angle = 30, vjust = 0.4), 
        plot.margin = margin(0.0, 0.2, 0.2, 0.4, "cm"), 
        panel.background = element_rect(fill = "black"), 
        plot.background = element_rect(fill = "Gray 65"), 
        panel.grid.major.x = element_line(colour = "white", linetype = "dotted", linewidth = 0.1), 
        panel.grid.major.y = element_line(colour = "white", linetype = "dotted", linewidth = 0.1), 
        panel.grid.minor.x = element_line(colour = "white", linetype = "dotted", linewidth = 0.1), 
        panel.grid.minor.y = element_blank()
        )


  
```

 
 