---
title: "R03 - Autocorrelation"
author: 'Fran√ßois de Ryckel'
date: '2024-01-13'
format: html
editor: visual
---

The idea of this document is to research effect of auto-correlation beyond the daily returns. So what I am looking for is to what extend does past return could predict future return (3W, 5W and 7W).

```{r}
#| label: setup
#| message: false
#| warning: false

library(readr)
library(glue)
library(dplyr)
library(purrr)
library(tidyr)        # drop_na()
library(broom)

```

```{r}
#| label: create-df
#| message: false
#| warning: false

ticker <- 'CHTR'

df <- read_csv(glue('../data_stock_fmpr/', ticker, '.csv')) |> 
  select(date, adjusted = adjClose) |> arrange(date) |> 
  mutate(ret5d = log(adjusted / lag(adjusted, n = 5)), 
         ret7d = log(adjusted / lag(adjusted, n = 7)),
         ret11d = log(adjusted / lag(adjusted, n = 11)),
         ret13d = log(adjusted / lag(adjusted, n = 13)),
         ret17d = log(adjusted / lag(adjusted, n = 17)),
         ret19d = log(adjusted / lag(adjusted, n = 19)),
         ret23d = log(adjusted / lag(adjusted, n = 23)),
         ret29d = log(adjusted / lag(adjusted, n = 29)),
         ret31d = log(adjusted / lag(adjusted, n = 31)),
         ret37d = log(adjusted / lag(adjusted, n = 37)),
         ret41d = log(adjusted / lag(adjusted, n = 41)),
         ret47d = log(adjusted / lag(adjusted, n = 47)),
         ret53d = log(adjusted / lag(adjusted, n = 53)),
         ret59d = log(adjusted / lag(adjusted, n = 59)),
         ret67d = log(adjusted / lag(adjusted, n = 67)),
         ret73d = log(adjusted / lag(adjusted, n = 73)),
         ret83d = log(adjusted / lag(adjusted, n = 83)),
         ret97d = log(adjusted / lag(adjusted, n = 97)), 
         ret11M = log(adjusted / lag(adjusted, n = 231)), 
         ret1Y = log(adjusted / lag(adjusted, n = 252)), 
         for_ret1M = log(adjusted / lead(adjusted,  n = 21)), 
         for_ret5W = log(adjusted / lead(adjusted, n = 23)), 
         for_ret7W = log(adjusted / lead(adjusted, n = 37))) |> 
  drop_na() |> select(-adjusted) |> 
  mutate(bin_ret5d = as.factor(ntile(ret5d, n = 3)), 
         bin_ret7d = as.factor(ntile(ret7d, n = 3)), 
         bin_ret11d = as.factor(ntile(ret11d, n = 3)))

yo <- df |> 
  pivot_longer(cols = starts_with('ret'), 
               names_to = 'past_ret_L', values_to = 'past_ret') |> 
  pivot_longer(cols = starts_with('for_'), 
               names_to = 'fut_ret_L', values_to = 'fut_ret') |> 
  pivot_longer(cols = starts_with('bin_'), 
               names_to = 'bin_sys', values_to = 'bin_num') |> 
  arrange(date) 

|> 
  #mutate(same_same = if_else(past_ret_L == 'ret5d', 1, 0)) |> 
  select(date, past_ret_L, fut_ret_L, past_ret, fut_ret) |> 
  group_by(past_ret_L, fut_ret_L) |> 
  do(tidy(cor.test(.$past_ret, .$fut_ret, method = 'pearson')))
  #summarize(cor = map2(.x = past_ret, .y = fut_ret, .f = cor.test))


yo2 <- yo |> 
  nest_by(past_ret_L, fut_ret_L) |> 
  mutate(cor = map(data, ~ tidy(cor.test(.x$past_ret, .x$fut_ret))))
```

Next we could instead bin the returns into 3 equal bins of returns (low, average, high) and then do the correlation for each of these bins.

REproducible example

```{r}
df <- tibble(x = rep(1:10, 9), 
             fruit = rep(c('banana', 'apple', 'orange'), 30), 
             fruit2 = c(rep('apple', 30), rep('banana', 30), rep('orange', 30))) |> 
  mutate(var1 = paste0(fruit, x), var2 = paste0('bin_', fruit2, x))
```
